// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class leagueClosed extends ethereum.Event {
  get params(): leagueClosed__Params {
    return new leagueClosed__Params(this);
  }
}

export class leagueClosed__Params {
  _event: leagueClosed;

  constructor(event: leagueClosed) {
    this._event = event;
  }

  get _leagueId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _winners(): Array<string> {
    return this._event.parameters[2].value.toStringArray();
  }

  get _prizePerParticipant(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class leagueCreated extends ethereum.Event {
  get params(): leagueCreated__Params {
    return new leagueCreated__Params(this);
  }
}

export class leagueCreated__Params {
  _event: leagueCreated;

  constructor(event: leagueCreated) {
    this._event = event;
  }

  get _leagueId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _gameName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _minEntry(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class leagueJoined extends ethereum.Event {
  get params(): leagueJoined__Params {
    return new leagueJoined__Params(this);
  }
}

export class leagueJoined__Params {
  _event: leagueJoined;

  constructor(event: leagueJoined) {
    this._event = event;
  }

  get _leagueId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _pAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _nickName(): string {
    return this._event.parameters[3].value.toString();
  }

  get isBlocked(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class leagueLive extends ethereum.Event {
  get params(): leagueLive__Params {
    return new leagueLive__Params(this);
  }
}

export class leagueLive__Params {
  _event: leagueLive;

  constructor(event: leagueLive) {
    this._event = event;
  }

  get _leagueId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class prizeClaimed extends ethereum.Event {
  get params(): prizeClaimed__Params {
    return new prizeClaimed__Params(this);
  }
}

export class prizeClaimed__Params {
  _event: prizeClaimed;

  constructor(event: prizeClaimed) {
    this._event = event;
  }

  get _leagueId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _pAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _nickName(): string {
    return this._event.parameters[3].value.toString();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class toggleBlockPlayerEvent extends ethereum.Event {
  get params(): toggleBlockPlayerEvent__Params {
    return new toggleBlockPlayerEvent__Params(this);
  }
}

export class toggleBlockPlayerEvent__Params {
  _event: toggleBlockPlayerEvent;

  constructor(event: toggleBlockPlayerEvent) {
    this._event = event;
  }

  get _leagueId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class LeagueMaker__viewClosedLeaguesResultValue0Struct extends ethereum.Tuple {
  get leagueId(): BigInt {
    return this[0].toBigInt();
  }

  get status(): i32 {
    return this[1].toI32();
  }

  get winner(): Address {
    return this[2].toAddress();
  }

  get openTime(): BigInt {
    return this[3].toBigInt();
  }

  get liveTime(): BigInt {
    return this[4].toBigInt();
  }

  get closeTime(): BigInt {
    return this[5].toBigInt();
  }

  get minEntry(): BigInt {
    return this[6].toBigInt();
  }

  get totalPrize(): BigInt {
    return this[7].toBigInt();
  }

  get prizePerPlayer(): BigInt {
    return this[8].toBigInt();
  }

  get exists(): boolean {
    return this[9].toBoolean();
  }
}

export class LeagueMaker__viewLiveLeaguesResultValue0Struct extends ethereum.Tuple {
  get leagueId(): BigInt {
    return this[0].toBigInt();
  }

  get status(): i32 {
    return this[1].toI32();
  }

  get winner(): Address {
    return this[2].toAddress();
  }

  get openTime(): BigInt {
    return this[3].toBigInt();
  }

  get liveTime(): BigInt {
    return this[4].toBigInt();
  }

  get closeTime(): BigInt {
    return this[5].toBigInt();
  }

  get minEntry(): BigInt {
    return this[6].toBigInt();
  }

  get totalPrize(): BigInt {
    return this[7].toBigInt();
  }

  get prizePerPlayer(): BigInt {
    return this[8].toBigInt();
  }

  get exists(): boolean {
    return this[9].toBoolean();
  }
}

export class LeagueMaker__viewOpenLeaguesResultValue0Struct extends ethereum.Tuple {
  get leagueId(): BigInt {
    return this[0].toBigInt();
  }

  get status(): i32 {
    return this[1].toI32();
  }

  get winner(): Address {
    return this[2].toAddress();
  }

  get openTime(): BigInt {
    return this[3].toBigInt();
  }

  get liveTime(): BigInt {
    return this[4].toBigInt();
  }

  get closeTime(): BigInt {
    return this[5].toBigInt();
  }

  get minEntry(): BigInt {
    return this[6].toBigInt();
  }

  get totalPrize(): BigInt {
    return this[7].toBigInt();
  }

  get prizePerPlayer(): BigInt {
    return this[8].toBigInt();
  }

  get exists(): boolean {
    return this[9].toBoolean();
  }
}

export class LeagueMaker extends ethereum.SmartContract {
  static bind(address: Address): LeagueMaker {
    return new LeagueMaker("LeagueMaker", address);
  }

  lastLeagueId(): BigInt {
    let result = super.call("lastLeagueId", "lastLeagueId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastLeagueId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastLeagueId", "lastLeagueId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  viewClosedLeagues(): Array<LeagueMaker__viewClosedLeaguesResultValue0Struct> {
    let result = super.call(
      "viewClosedLeagues",
      "viewClosedLeagues():((uint256,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,bool)[])",
      []
    );

    return result[0].toTupleArray<
      LeagueMaker__viewClosedLeaguesResultValue0Struct
    >();
  }

  try_viewClosedLeagues(): ethereum.CallResult<
    Array<LeagueMaker__viewClosedLeaguesResultValue0Struct>
  > {
    let result = super.tryCall(
      "viewClosedLeagues",
      "viewClosedLeagues():((uint256,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<LeagueMaker__viewClosedLeaguesResultValue0Struct>()
    );
  }

  viewLiveLeagues(): Array<LeagueMaker__viewLiveLeaguesResultValue0Struct> {
    let result = super.call(
      "viewLiveLeagues",
      "viewLiveLeagues():((uint256,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,bool)[])",
      []
    );

    return result[0].toTupleArray<
      LeagueMaker__viewLiveLeaguesResultValue0Struct
    >();
  }

  try_viewLiveLeagues(): ethereum.CallResult<
    Array<LeagueMaker__viewLiveLeaguesResultValue0Struct>
  > {
    let result = super.tryCall(
      "viewLiveLeagues",
      "viewLiveLeagues():((uint256,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<LeagueMaker__viewLiveLeaguesResultValue0Struct>()
    );
  }

  viewOpenLeagues(): Array<LeagueMaker__viewOpenLeaguesResultValue0Struct> {
    let result = super.call(
      "viewOpenLeagues",
      "viewOpenLeagues():((uint256,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,bool)[])",
      []
    );

    return result[0].toTupleArray<
      LeagueMaker__viewOpenLeaguesResultValue0Struct
    >();
  }

  try_viewOpenLeagues(): ethereum.CallResult<
    Array<LeagueMaker__viewOpenLeaguesResultValue0Struct>
  > {
    let result = super.tryCall(
      "viewOpenLeagues",
      "viewOpenLeagues():((uint256,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<LeagueMaker__viewOpenLeaguesResultValue0Struct>()
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimPrizeCall extends ethereum.Call {
  get inputs(): ClaimPrizeCall__Inputs {
    return new ClaimPrizeCall__Inputs(this);
  }

  get outputs(): ClaimPrizeCall__Outputs {
    return new ClaimPrizeCall__Outputs(this);
  }
}

export class ClaimPrizeCall__Inputs {
  _call: ClaimPrizeCall;

  constructor(call: ClaimPrizeCall) {
    this._call = call;
  }

  get _leagueId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimPrizeCall__Outputs {
  _call: ClaimPrizeCall;

  constructor(call: ClaimPrizeCall) {
    this._call = call;
  }
}

export class CloseLeagueCall extends ethereum.Call {
  get inputs(): CloseLeagueCall__Inputs {
    return new CloseLeagueCall__Inputs(this);
  }

  get outputs(): CloseLeagueCall__Outputs {
    return new CloseLeagueCall__Outputs(this);
  }
}

export class CloseLeagueCall__Inputs {
  _call: CloseLeagueCall;

  constructor(call: CloseLeagueCall) {
    this._call = call;
  }

  get _leagueId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _winners(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class CloseLeagueCall__Outputs {
  _call: CloseLeagueCall;

  constructor(call: CloseLeagueCall) {
    this._call = call;
  }
}

export class JoinLeagueCall extends ethereum.Call {
  get inputs(): JoinLeagueCall__Inputs {
    return new JoinLeagueCall__Inputs(this);
  }

  get outputs(): JoinLeagueCall__Outputs {
    return new JoinLeagueCall__Outputs(this);
  }
}

export class JoinLeagueCall__Inputs {
  _call: JoinLeagueCall;

  constructor(call: JoinLeagueCall) {
    this._call = call;
  }

  get _leagueId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nickName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class JoinLeagueCall__Outputs {
  _call: JoinLeagueCall;

  constructor(call: JoinLeagueCall) {
    this._call = call;
  }
}

export class LiveLeagueCall extends ethereum.Call {
  get inputs(): LiveLeagueCall__Inputs {
    return new LiveLeagueCall__Inputs(this);
  }

  get outputs(): LiveLeagueCall__Outputs {
    return new LiveLeagueCall__Outputs(this);
  }
}

export class LiveLeagueCall__Inputs {
  _call: LiveLeagueCall;

  constructor(call: LiveLeagueCall) {
    this._call = call;
  }

  get _leagueId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiveLeagueCall__Outputs {
  _call: LiveLeagueCall;

  constructor(call: LiveLeagueCall) {
    this._call = call;
  }
}

export class OpenLeagueCall extends ethereum.Call {
  get inputs(): OpenLeagueCall__Inputs {
    return new OpenLeagueCall__Inputs(this);
  }

  get outputs(): OpenLeagueCall__Outputs {
    return new OpenLeagueCall__Outputs(this);
  }
}

export class OpenLeagueCall__Inputs {
  _call: OpenLeagueCall;

  constructor(call: OpenLeagueCall) {
    this._call = call;
  }

  get _gameName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _minEntry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _liveTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _closeTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class OpenLeagueCall__Outputs {
  _call: OpenLeagueCall;

  constructor(call: OpenLeagueCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ToggleBlockPlayerCall extends ethereum.Call {
  get inputs(): ToggleBlockPlayerCall__Inputs {
    return new ToggleBlockPlayerCall__Inputs(this);
  }

  get outputs(): ToggleBlockPlayerCall__Outputs {
    return new ToggleBlockPlayerCall__Outputs(this);
  }
}

export class ToggleBlockPlayerCall__Inputs {
  _call: ToggleBlockPlayerCall;

  constructor(call: ToggleBlockPlayerCall) {
    this._call = call;
  }

  get _leagueId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _player(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ToggleBlockPlayerCall__Outputs {
  _call: ToggleBlockPlayerCall;

  constructor(call: ToggleBlockPlayerCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
